---
import bg from '@assets/bg2.webp';
import CookieBanner from '@components/CookieBanner.astro';
import Footer from '@components/Footer.astro';
import Header from '@components/Header.astro';
import ScrollToTop from '@components/ScrollToTop.astro';
import { getLangFromUrl } from '@i18n/utils';
import { getImage } from 'astro:assets';

const optimizedBg = await getImage(bg);
const lang = getLangFromUrl(Astro.url);

export interface Props {
  title: string;
}
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <link rel='shortcut icon' href='favicon.jpg' type='image/x-icon' />
    <meta
      name='description'
      content='Earn rewards with ease using FingeRate! Complete surveys anywhere, anytime. Convenient and user-friendly. Download now on Play Store and iOS for extra rewards!'
    />
    <title>{title}</title>
    <link rel='preload' as='image' href={optimizedBg.src} />
  </head>
  <body class='grid grid-rows-[auto_1fr_auto] bg-deepSpace'>
    <Header />
    <main class='bg-cover bg-center bg-no-repeat' style={`background-image: url(${optimizedBg.src});`}>
      <slot />
    </main>
    <ScrollToTop />
    <CookieBanner />
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    color-scheme: dark;
    --intelligent-blue: 80 47 198;
    --soft-fire: 202 68 80;
    --neon-blue: 38 151 194;
    --deep-space: 34 33 52;
    --cyber-lilac: 216 201 213;
    --brand-gradient: linear-gradient(-5deg, rgb(var(--intelligent-blue) / 0.5), rgb(var(--intelligent-blue) / 0) 50%),
      linear-gradient(225deg, rgb(var(--neon-blue) / 1), rgb(var(--neon-blue) / 0) 50%),
      linear-gradient(100deg, rgb(var(--soft-fire) / 1) 35%, rgb(var(--intelligent-blue) / 1));
  }

  html,
  body {
    min-height: 100vh;
  }

  html:has(dialog[open]) {
    overflow: hidden;
  }

  .brand-text {
    display: inline;
    background-clip: text;
    -webkit-background-clip: text;
    background-image: var(--brand-gradient);
    color: transparent;
  }
</style>

<script>
  const sections = document.querySelectorAll('[data-scroll-animation]');

  if (sections.length > 0) {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.remove('motion-safe:opacity-0', 'motion-safe:translate-y-[10%]');
            observer.unobserve(entry.target);
          }
        });
      },
      { rootMargin: '-15%' }
    );

    sections.forEach((section) => {
      section.classList.add(
        'motion-safe:opacity-0',
        'motion-safe:transition',
        'motion-safe:translate-y-[10%]',
        '!duration-300'
      );
      observer.observe(section);
    });
  }
</script>
