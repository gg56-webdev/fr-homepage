---
import coinGeckoLogo from '@/assets/token/coin-gecko.webp'
import ecosystemLogo from '@/assets/token/ecosystem.webp'
import ethLogo from '@/assets/token/eth.webp'
import polygonLogo from '@/assets/token/polygon.png'
import { NAV_LINKS } from '@/constants'
import { localizePath } from 'astro-i18next'
import { Image } from 'astro:assets'
import { t } from 'i18next'
const images = [
  [
    ethLogo,
    'ethereum logo',
    t('token.about.tooltips.0'),
    'https://etherscan.io/token/0xe5ef42d0e5e4aa6b36c613d00db8dad303d505f3',
  ],
  [
    polygonLogo,
    'polygon logo',
    'Polygon Technology',
    'https://polygonscan.com/token/0xc3844570fce37ce5edc0f83c8ebe71d69e1bf92f',
  ],
  [coinGeckoLogo, 'Coin Gecko logo', 'Latest stats on Coin Gecko', 'https://www.coingecko.com/en/coins/btour-chain'],
  [ecosystemLogo, 'fingerate ecosystem logo', t('token.about.tooltips.1'), localizePath(NAV_LINKS.HOME.href)],
] as const
---

<section class="mx-auto max-w-screen-lg p-2">
  <div class="flex justify-around gap-4">
    {
      images.map(([src, alt, tooltip, href], i) => (
        <a {href} target="_blank" rel="noopener noreferrer" class="group ">
          <div class="before:opacity-0 hover:before:opacity-100 hover:before:animate-ping before:w-full before:h-full relative before:absolute before:rounded-full before:border-2">
            <Image class="group-hover:scale-95 transition" data-tooltip-trigger={i} src={src} alt={alt} />
          </div>
          <div
            data-tooltip-content={i}
            id="tooltipContent"
            role="tooltip"
            class="tooltip invisible absolute z-10 inline-block rounded-lg bg-gray-950 px-3 py-2 text-sm font-medium text-white opacity-0 shadow-sm transition-opacity duration-300 "
          >
            {tooltip}
            <div class="tooltip-arrow" data-popper-arrow />
          </div>
        </a>
      ))
    }
  </div>
</section>

<script>
  import { Tooltip } from 'flowbite'
  import type { TooltipOptions } from 'flowbite'

  const triggers = document.querySelectorAll<HTMLElement>('[data-tooltip-trigger]')

  const options: TooltipOptions = {
    placement: 'top',
    triggerType: 'hover',
  }

  triggers.forEach((t) => {
    new Tooltip(
      document.querySelector(`[data-tooltip-content='${t.dataset.tooltipTrigger!}']`) as HTMLElement,
      t,
      options
    )
  })
</script>
